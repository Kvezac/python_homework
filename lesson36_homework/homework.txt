1. Напишите функцию analysis_and_summarize_file, которая принимает имя файла в
качестве входных данных. Файл содержит большое количество текстовых данных.
Функция должна прочитать содержимое файла, проанализировать данные для сбора
соответствующей информации (например, частота слов, количество строк, средняя длина слова)
и создать сводный отчет в новом файле.

2. Напишите две функции: encrypt_file и decrypt_file. Функция encrypt_file должна
принимать имя файла и ключ в качестве входных данных, считывать содержимое файла,
шифровать содержимое с помощью пользовательского алгоритма шифрования и записывать
зашифрованные данные в новый файл. Функция decrypt_file должна принимать имя файла
и тот же ключ в качестве входных данных, читать зашифрованное содержимое файла,
расшифровывать содержимое с использованием обратного алгоритма и записывать
расшифрованные данные в новый файл. Создайте декоратор с именем encryption_logging,
который регистрирует сведения об операциях шифрования и дешифрования,
такие как имя файла, ключ и отметка времени.

3. Напишите функцию с именем analysis_file_sizes, которая принимает путь к каталогу
в качестве входных данных. Функция должна рекурсивно обходить каталог и его подкаталоги и
вычислять общий размер всех файлов, содержащихся в них. Результат должен быть возвращен в
удобочитаемом формате, например, в килобайтах (КБ), мегабайтах (МБ) или гигабайтах (ГБ).
Реализуйте эту функциональность с помощью модуля os в Python.